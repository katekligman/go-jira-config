user: USER
project: PROJECTSHORTCODE
endpoint: https://BASE_URL
editor: vim

custom-commands:
  - name: sprint
    help: display issues for active sprint
    script: |-
      if [ -n "$JIRA_PROJECT" ]; then
          {{jira}} list --query "sprint in openSprints() and sprint not in futureSprints() and type != epic and resolution = unresolved and project=$JIRA_PROJECT ORDER BY rank asc, created"
      else
          echo "\"project: ...\" configuration missing from .jira.d/config.yml"
      fi

  - name: mine
    help: display issues assigned to me
    script: |-
      if [ -n "$JIRA_PROJECT" ]; then
          {{jira}} list --query "resolution = unresolved and status != Done and assignee=currentuser() and project = $JIRA_PROJECT ORDER BY priority asc, created"
      else
          {{jira}} list --template table --query "resolution = unresolved and assignee=currentuser() ORDER BY priority asc, created"
      fi

  - name: nextsprint
    help: display issues for future sprints
    script: |-
      if [ -n "$JIRA_PROJECT" ]; then
          {{jira}} list --query "sprint in futureSprints() and type != epic and resolution = unresolved and project=$JIRA_PROJECT ORDER BY rank asc, created"
      else
          echo "\"project: ...\" configuration missing from .jira.d/config.yml"
      fi

  - name: boards
    help: List the boards (projects) available with their ids
    script: |-
      {{jira}} req --template boards -M GET /rest/agile/1.0/board

  - name: sprints
    help: List the sprints available with their internal ids
    args:
      - name: board_id
        required: true
    script: |-
      {{jira}} req --template sprints -M GET /rest/agile/1.0/board/{{args.board_id}}/sprint

  - name: addtosprint
    help: Add issue (eg. TEST-123) to sprint SPRINTID
    args: 
      - name: issue
        required: true
      - name: sprint_id
        required: true
    script: |-
      {{jira}} req -M POST /rest/agile/1.0/sprint/{{args.sprint_id}}/issue '{"issues":["{{args.issue}}"]}'
  
